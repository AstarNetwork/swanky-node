on: [push, workflow_dispatch]

name: Integration

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@master
      with:
        submodules: true

    - name: Install & display rust toolchain
      run: rustup show

    - name: Check targets are installed correctly
      run: rustup target list --installed

    - name: Run all tests
      run: cargo test

  native-linux:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@master
      with:
        submodules: true

    - name: Install & display rust toolchain
      run: rustup show

    - name: Check targets are installed correctly
      run: rustup target list --installed

    - name: Build optimized binary
      run: cargo build --release --verbose

    - uses: actions/upload-artifact@master
      with:
        name: swanky-node-ubuntu-latest-x86_64
        path: target/release/swanky-node

  native-macos:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@master
      with:
        submodules: true

    - name: Install & display rust toolchain
      run: rustup show

    - name: Check targets are installed correctly
      run: rustup target list --installed

    - name: Build optimized binary
      run: cargo build --release --verbose

    - uses: actions/upload-artifact@master
      with:
        name: swanky-node-macOS-latest-x86_64
        path: target/release/swanky-node

  # docker:
    # needs: test
    # if: startsWith(github.ref, 'refs/tags/')
    # runs-on: ubuntu-latest
    # steps:
    # - name: Checkout the source code
      # uses: actions/checkout@v2
      # with:
        # submodules: true

    # - name: Install & display rust toolchain
      # run: rustup show

    # - name: Check targets are installed correctly
      # run: rustup target list --installed

    # - name: Set up Docker Buildx
      # uses: docker/setup-buildx-action@v1

    # - name: Login to DockerHub
      # uses: docker/login-action@v1
      # with:
        # username: ${{ secrets.DOCKER_USERNAME }}
        # password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Docker meta
      # id: docker_meta
      # uses: crazy-max/ghaction-docker-meta@v1
      # with:
        # images: staketechnologies/swanky-node
        # # tag-custom: xxx
        # tag-sha: true # add git short SHA as Docker tag

    # - name: Build optimized binary
      # run: |
        # CARGO_PROFILE_RELEASE_LTO=true RUSTFLAGS="-C codegen-units=1" cargo build --locked --release
        # cp target/release/swanky-node third-party/docker

    # - name: Build & Push docker image
      # uses: docker/build-push-action@v2
      # with:
        # context: third-party/docker 
        # platforms: linux/amd64
        # labels: ${{ steps.docker_meta.outputs.labels }}
        # tags: ${{ steps.docker_meta.outputs.tags }}
        # push: true